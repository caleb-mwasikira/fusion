syntax = "proto3";

option go_package = "./proto";
option java_package = "org.example.project.proto";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message Owner {
    uint32 uid = 1;
    uint32 gid = 2;
}

message FileAttr {
    google.protobuf.Timestamp valid = 1;    // how long FileAttr can be cached
    uint64 ino = 2;       // inode number
    uint64 size = 3;        // size in bytes
    google.protobuf.Timestamp a_time = 4;   // time of last access
    google.protobuf.Timestamp m_time = 5;   // time of last modification
    google.protobuf.Timestamp c_time = 6;   // time of last ino change
    uint32 mode = 7;        // file mode
    uint32 n_link = 8;      // number of links
    Owner owner = 9;        // owner user ID and group ID
    uint32 block_size = 10; // preferred blocksize for filesystem I/O
    uint32 flags = 11;
}

message LookupRequest {
    DirEntry node = 1;          // node to perform lookup operation in
    string path = 2;        // path of node to look for
}

message MkdirRequest {
    string path = 1;        // path of new directory to be created
    uint32 mode = 2;        // file mode
    uint32 umask = 3;       // umask of new directory
}

message CreateRequest {
    string path = 1;
    uint32 flags = 2;
    uint32 mode = 3;
    uint32 umask = 4;
}

message CreateResponse {
    uint64 node_id = 1;
    uint64 generation = 2;
    google.protobuf.Timestamp entry_valid = 3;
    FileAttr attr = 4;
}

message WriteRequest {
    string path = 1;   // file to write to
    int64 offset = 2;       // point to start writing within file
    bytes data = 3;
}

message RenameRequest {
    string old_path = 1;
    string new_path = 2;
}

message DirEntry {
    uint64 ino = 1;       // inode number
    uint32 mode = 2; 
    string path = 3;        // path of the entry
    FileAttr attr = 4;
}

message ReadDirAllResponse {
    repeated DirEntry entries = 1;
}

message ReadAllResponse {
    bytes data = 1;
}

message WriteResponse {
    uint64 bytes_written = 1;
}

message LinkRequest {
    string old_path = 1;
    string new_path = 2;
}

message LinkResponse {
    DirEntry node = 1;
}

message DownloadRequest {
    string path = 1;
    string expected_hash = 2;
}

message FileChunk {
    bytes data = 1;
    int64 offset = 2;
    int64 total_size = 3;
}

message AuthRequest {
    string username = 1;
    string password = 2;
}

message AuthResponse {
    string token = 1;
}

message FileEvent {
    uint32 event = 1;
    string path = 2;
    string new_path = 3;
    uint32 mode = 4;
    google.protobuf.Timestamp timestamp = 5;
}

service Fuse {
    rpc Auth(AuthRequest) returns (AuthResponse) {};
    rpc DownloadFile(DownloadRequest) returns (stream FileChunk) {};
    rpc ObserveFileChanges(google.protobuf.Empty) returns (stream FileEvent) {};

    // FUSE functions
    rpc Lookup(LookupRequest) returns (DirEntry) {};
    rpc ReadDirAll(DirEntry) returns (ReadDirAllResponse) {};
    rpc Mkdir(MkdirRequest) returns (DirEntry) {};
    rpc Rmdir(DirEntry) returns (google.protobuf.Empty) {};
    rpc Getattr(DirEntry) returns (FileAttr) {};
    rpc Create(CreateRequest) returns (CreateResponse) {};
    rpc Symlink(LinkRequest) returns (LinkResponse) {};
    rpc Link(LinkRequest) returns (LinkResponse) {};
    rpc ReadAll(DirEntry) returns (ReadAllResponse) {};
    rpc Write(WriteRequest) returns (WriteResponse) {};
    rpc Rename(RenameRequest) returns (google.protobuf.Empty) {};
}